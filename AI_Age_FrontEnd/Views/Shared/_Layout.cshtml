<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>@ViewData["Title"] - AI Age</title>
    <meta name="description" content="">
    <meta name="keywords" content="">

    <!-- Favicons -->
    <link href="~/img/favicon.png" rel="icon">
    <link href="~/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com" rel="preconnect">
    <link href="https://fonts.gstatic.com" rel="preconnect" crossorigin">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/lib/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="~/assets/vendor/aos/aos.css" rel="stylesheet">
    <link href="~/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="~/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">

    <!-- Main CSS File -->
    <link href="~/css/main.css" rel="stylesheet">
    <link href="~/css/user/auth.css" rel="stylesheet">
    <link href="~/css/user/article.css" rel="stylesheet">
    <link href="~/css/user/video-article.css" rel="stylesheet">
    <link href="~/css/user/forum.css" rel="stylesheet">
    <link href="~/css/user/chat.css" rel="stylesheet">
</head>
<body class="index-page">
    <header id="header" class="header d-flex align-items-center sticky-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center">
            <a href="/" class="logo d-flex align-items-center me-auto">
                <h1 class="sitename">AI Age</h1>
            </a>
            <nav id="navmenu" class="navmenu">
                <ul>
                    <li>
                        <a asp-controller="Home" asp-action="Index" 
                        class="@(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")">
                            Trang chủ
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Article" asp-action="Index"
                        class="@(ViewContext.RouteData.Values["Controller"]?.ToString() == "Article" ? "active" : "")">
                            Bài hướng dẫn
                        </a>
                    </li>
                    <li>
                        <a asp-controller="VideoArticle" asp-action="Index"
                        class="@(ViewContext.RouteData.Values["Controller"]?.ToString() == "VideoArticle" ? "active" : "")">
                            Video hướng dẫn
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Forum" asp-action="Index"
                        class="@(ViewContext.RouteData.Values["Controller"]?.ToString() == "Forum" ? "active" : "")">
                            Diễn đàn
                        </a>
                    </li>         
                    @* <li class="dropdown"> *@
                    @*     <a href="#"><span>Dropdown</span> <i class="bi bi-chevron-down toggle-dropdown"></i></a> *@
                    @*     <ul> *@
                    @*         <li><a href="#">Dropdown 1</a></li> *@
                    @*         <li><a href="#">Dropdown 2</a></li> *@
                    @*         <li><a href="#">Dropdown 3</a></li> *@
                    @*     </ul> *@
                    @* </li> *@
                    <li>
                        <a asp-controller="About" asp-action="Index"
                        class="@(ViewContext.RouteData.Values["Controller"]?.ToString() == "About" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")">
                            Về chúng tôi
                        </a>
                    </li>
                    <script>
                        const username = localStorage.getItem('username');
                        if (username) {
                            document.write(`
                                <li class="dropdown">
                                    <a href="#">
                                        <img src="/img/profile.png" alt="Avatar" class="user-avatar" />
                                        <span>${username}</span>
                                        <i class="bi bi-chevron-down toggle-dropdown"></i>
                                    </a>
                                    <ul>
                                        <li><a href="/Auth/Profile">Thông tin người dùng</a></li>
                                        <li><a href="/Auth/Logout">Đăng xuất</a></li>
                                    </ul>
                                </li>
                            `);
                        } else {
                            document.write(`<a class="btn-getstarted" href="/Auth/Login">Đăng nhập</a>`);
                        }
                    </script>
                </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>

        </div>
    </header>

    <main class="main">
        @RenderBody()
    </main>

    <footer id="footer" class="footer position-relative light-background">
        <div class="container footer-top">
            <div class="row gy-4">
                <div class="col-lg-4 col-md-6 footer-about">
                    <a href="/" class="logo d-flex align-items-center">
                        <span class="sitename">AI AGE</span>
                    </a>
                    <div class="footer-contact pt-3">
                        <p>Thủ Đức</p>
                        <p>Hồ Chí Minh</p>
                        <p class="mt-3"><strong>Số điện thoại:</strong> <span>0103332198</span></p>
                        <p><strong>Địa chỉ email:</strong> <span>phangiadat123@gmail.com</span></p>
                    </div>
                    <div class="social-links d-flex mt-4">
                        <a href=""><i class="bi bi-twitter-x"></i></a>
                        <a href=""><i class="bi bi-facebook"></i></a>
                        <a href=""><i class="bi bi-instagram"></i></a>
                        <a href=""><i class="bi bi-linkedin"></i></a>
                    </div>
                </div>
                <div class="col-lg-2 col-md-3 footer-links">
                    <h4>Các đường dẫn hữu ích</h4>
                    <ul>
                        <li><a href="#">Trang chủ</a></li>
                        <li><a href="#">Về chúng tôi</a></li>
                        <li><a href="#">Khóa học</a></li>
                        <li><a href="#">Điều khoản dịch vụ</a></li>
                        <li><a href="#">Chính sách bảo mật</a></li>
                    </ul>
                </div>
                <div class="col-lg-2 col-md-3 footer-links">
                    <h4>Our Services</h4>
                    <ul>
                        <li><a href="#">Web Design</a></li>
                        <li><a href="#">Web Development</a></li>
                        <li><a href="#">Product Management</a></li>
                        <li><a href="#">Marketing</a></li>
                        <li><a href="#">Graphic Design</a></li>
                    </ul>
                </div>
                <div class="col-lg-4 col-md-12 footer-newsletter">
                    <h4>Our Newsletter</h4>
                    <p>Subscribe to our newsletter and receive the latest news about our products and services!</p>
                    <form action="/Home/Subscribe" method="post" class="email-form">
                        <div class="newsletter-form"><input type="email" name="email"><input type="submit" value="Subscribe"></div>
                        <div class="loading">Loading</div>
                        <div class="error-message"></div>
                        <div class="sent-message">Your subscription request has been sent. Thank you!</div>
                    </form>
                </div>
            </div>
        </div>
        <div class="container copyright text-center mt-4">
            <p>© <span>Bản quyền thuộc về</span> <strong class="px-1 sitename">Phan Gia Đạt</strong> <span>Mọi quyền được bảo lưu</span></p>
            <div class="credits">
                Thiết kế bởi <a href="https://github.com/DRobbie39">Phan Gia Đạt</a>
            </div>
        </div>
    </footer>

    <!-- Chatbox HTML -->
    @* <div id="chatbox-placeholder"></div> *@
    <div class="chat-widget-container">
        <div id="chat-toggle" class="chat-toggle-button">
            <i class="fas fa-comment-dots"></i>
        </div>

        <div id="chat-container" class="chat-container">
            <div class="chat-header">
                <h3>Trò chuyện với Trợ lý AI</h3>
                <button id="close-chat" class="chat-close-button">×</button>
            </div>
            <div id="chat-body" class="chat-body">
                <div class="chat-message bot">
                    <p>Xin chào! Ông/Bà có cần con giúp gì không ạ? Hãy hỏi con bất cứ điều gì nhé!</p>
                </div>
            </div>
            <div class="chat-input-area">
                <input type="text" id="chat-input" placeholder="Nhập câu hỏi ở đây...">
                <button id="mic-btn" title="Hỏi bằng giọng nói"><i class="fas fa-microphone"></i></button>
                <button id="send-btn" title="Gửi câu hỏi"><i class="fas fa-paper-plane"></i></button>
            </div>
        </div>
    </div>

    <!-- Vendor JS Files -->
    <script src="~/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/vendor/aos/aos.js"></script>
    <script src="~/assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="~/assets/vendor/purecounter/purecounter_vanilla.js"></script>
    <script src="~/assets/vendor/swiper/swiper-bundle.min.js"></script>
    <!-- JQuery JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <!-- Main JS File -->
    <script src="~/js/main.js"></script>
    <script src="~/js/toastrNotification.js"></script>

    <!-- Chatbox JavaScript -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- Lấy các phần tử DOM ---
            const chatToggleBtn = document.getElementById('chat-toggle');
            const chatContainer = document.getElementById('chat-container');
            const closeChatBtn = document.getElementById('close-chat');
            const chatBody = document.getElementById('chat-body');
            const chatInput = document.getElementById('chat-input');
            const sendBtn = document.getElementById('send-btn');
            const micBtn = document.getElementById('mic-btn');

            // --- Kiểm tra đăng nhập ---
            const token = localStorage.getItem('jwtToken');
            if (!token) {
                document.querySelector('.chat-widget-container').style.display = 'none';
                return; // Nếu chưa đăng nhập thì không khởi tạo chatbox
            }

            // --- Thiết lập Web Speech API ---
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            const recognition = SpeechRecognition ? new SpeechRecognition() : null;
            let isListening = false;

            if (recognition) {
                recognition.continuous = false;
                recognition.lang = 'vi-VN';
                recognition.interimResults = false;

                recognition.onresult = (event) => {
                    const transcript = event.results[0][0].transcript;
                    chatInput.value = transcript;
                    micBtn.classList.remove('listening');
                    micBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                    isListening = false;
                    handleSendMessage(); // Tự động gửi sau khi nói xong
                };

                recognition.onerror = (event) => {
                    console.error('Speech recognition error:', event.error);
                    toastr.error('Con không nghe rõ, ông/bà vui lòng thử lại ạ.');
                    micBtn.classList.remove('listening');
                    micBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                    isListening = false;
                };

                recognition.onend = () => {
                    if (isListening) {
                        micBtn.classList.remove('listening');
                        micBtn.innerHTML = '<i class="fas fa-microphone"></i>';
                        isListening = false;
                    }
                };
            } else {
                micBtn.style.display = 'none'; // Ẩn nút mic nếu trình duyệt không hỗ trợ
            }

            // --- Hàm chức năng ---
            const toggleChat = () => chatContainer.classList.toggle('open');

            const addMessageToChat = (text, sender) => {
                const messageDiv = document.createElement('div');
                messageDiv.className = `chat-message ${sender}`;
                messageDiv.innerHTML = `<p>${text}</p>`;
                chatBody.appendChild(messageDiv);
                chatBody.scrollTop = chatBody.scrollHeight;
            };

            const showTypingIndicator = () => {
                const typingDiv = document.createElement('div');
                typingDiv.className = 'chat-message bot typing-indicator';
                typingDiv.innerHTML = `<p><span>.</span><span>.</span><span>.</span></p>`;
                chatBody.appendChild(typingDiv);
                chatBody.scrollTop = chatBody.scrollHeight;
            };

            const removeTypingIndicator = () => {
                const indicator = document.querySelector('.typing-indicator');
                if (indicator) {
                    indicator.remove();
                }
            };

            const speak = (text) => {
                if ('speechSynthesis' in window) {
                    // Dừng các lần đọc trước đó (nếu có)
                    window.speechSynthesis.cancel();

                    const utterance = new SpeechSynthesisUtterance(text);
                    utterance.lang = 'vi-VN';
                    utterance.rate = 0.9; // Tốc độ đọc vừa phải
                    window.speechSynthesis.speak(utterance);
                }
            };

            const handleSendMessage = async () => {
                const question = chatInput.value.trim();
                if (!question) return;

                addMessageToChat(question, 'user');
                chatInput.value = '';
                showTypingIndicator();

                try {
                    const response = await fetch('https://localhost:7022/api/Chat/ask', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify({ Question: question })
                    });

                    removeTypingIndicator();

                    if (!response.ok) {
                        throw new Error('Network response was not ok.');
                    }

                    const data = await response.json();
                    const botResponse = data.message || 'Xin lỗi, đã có lỗi xảy ra.';
                    addMessageToChat(botResponse, 'bot');
                    speak(botResponse); // Đọc câu trả lời của bot

                } catch (error) {
                    console.error('Fetch error:', error);
                    removeTypingIndicator();
  
                    const errorMessage = 'Con xin lỗi, đã có lỗi xảy ra. Ông/Bà vui lòng thử lại sau ạ.';
                    addMessageToChat(errorMessage, 'bot');
                    speak(errorMessage);
                }
            };

            const handleMicClick = () => {
                if (!recognition) return;

                if (isListening) {
                    recognition.stop();
                } else {
                    recognition.start();
                    isListening = true;
                    micBtn.classList.add('listening');
                    micBtn.innerHTML = '<i class="fas fa-stop-circle"></i>';
                    toastr.info('Con đang lắng nghe đây ạ...');
                }
            };

            // --- Gắn các sự kiện ---
            chatToggleBtn.addEventListener('click', toggleChat);
            closeChatBtn.addEventListener('click', toggleChat);
            sendBtn.addEventListener('click', handleSendMessage);
            micBtn.addEventListener('click', handleMicClick);
            chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    handleSendMessage();
                }
            });

            // --- Xử lý đăng xuất ---
            document.querySelectorAll('a[href="/Auth/Logout"]').forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    window.speechSynthesis.cancel(); // Dừng đọc khi đăng xuất
                    localStorage.removeItem('jwtToken');
                    localStorage.removeItem('userId');
                    localStorage.removeItem('username');
                    window.location.href = '/Home/Index';
                });
            });
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>