@{
    ViewData["Title"] = "Diễn đàn";
}

<div class="page-title" data-aos="fade">
    <div class="heading">
        <div class="container">
            <div class="row d-flex justify-content-center text-center">
                <div class="col-lg-8">
                    <h1>Diễn đàn</h1>
                    <p class="mb-0">Chia sẻ và thảo luận về công nghệ AI cùng cộng đồng người lớn tuổi.</p>
                </div>
            </div>
        </div>
    </div>
    <nav class="breadcrumbs">
        <div class="container">
            <ol>
                <li><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
                <li class="current">Diễn đàn</li>
            </ol>
        </div>
    </nav>
</div>
<section id="forum" class="forum section">
    <div class="container">

        <div id="notification-area"></div>

        <div class="new-post mb-5" data-aos="fade-up" data-aos-delay="100">
            <h2>Đăng bài viết mới</h2>
            <form id="new-post-form" method="post" enctype="multipart/form-data" class="d-flex flex-column">
                <div class="mb-3">
                    <label for="title" class="form-label">Tiêu đề bài viết</label>
                    <input type="text" name="Title" id="title" class="form-control" placeholder="Nhập tiêu đề..." required />
                </div>
                <div class="mb-3">
                    <label for="content" class="form-label">Nội dung</label>
                    <textarea name="Content" id="content" class="form-control mb-3" placeholder="Viết bài của bạn ở đây..." required></textarea>
                </div>
                <div class="mb-3">
                    <label for="attachedImage" class="form-label">Hình ảnh đính kèm (nếu có)</label>
                    <input type="file" name="AttachedImageFile" id="attachedImage" class="form-control" accept="image/*" />
                </div>
                <button type="submit" class="btn btn-primary">Đăng bài</button>
            </form>
        </div>

        <div class="forum-posts" data-aos="fade-up" data-aos-delay="200">
            <h2>Các bài viết</h2>
            <div id="posts-container">
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal xác nhận xóa -->
<div class="modal fade" id="deletePostModal" tabindex="-1" aria-labelledby="deletePostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deletePostModalLabel">Xác nhận xóa bài viết</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn xóa bài viết này? Hành động này không thể hoàn tác.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeletePost">Xóa</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const apiBaseUrl = '@ViewBag.ApiBaseUrl';
            let editingPostId = null;
            let postIdToDelete = null;

            // Load posts on page load
            loadPosts();

            // Handle new post form submission
            $('#new-post-form').on('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                const url = editingPostId ? `${apiBaseUrl}/api/UserPosts/${editingPostId}` : `${apiBaseUrl}/api/UserPosts`;
                const method = editingPostId ? 'PUT' : 'POST';

                $.ajax({
                    url: url,
                    type: method,
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')
                    },
                    success: function (response) {
                        showNotification('Bài viết đã được ' + (editingPostId ? 'cập nhật' : 'tạo'), 'success');
                        $('#new-post-form')[0].reset();
                        editingPostId = null;
                        $('#new-post-form button').text('Đăng bài');
                        loadPosts();
                    },
                    error: function (xhr) {
                        const message = xhr.responseJSON?.message || 'Đã có lỗi xảy ra. Vui lòng thử lại.';
                        showNotification(message, 'error');
                    }
                });
            });

            // Load all posts
            function loadPosts() {
                $.ajax({
                    url: `${apiBaseUrl}/api/UserPosts`,
                    type: 'GET',
                    success: function (posts) {
                        $('#posts-container').empty();
                        if (posts.length === 0) {
                            $('#posts-container').html('<p class="text-center">Không có bài viết nào.</p>');
                        } else {
                            posts.forEach(post => renderPost(post));
                        }
                    },
                    error: function () {
                        showNotification('Không thể tải bài viết.', 'error');
                    }
                });
            }

            // Render a single post
            function renderPost(post) {
                const userId = parseInt(localStorage.getItem('userId')) || 0;
                const isOwner = post.userID === userId;
                const postHtml = `
                    <div class="post card mb-3" data-post-id="${post.postID}">
                        <div class="card-body">
                            <h3 class="card-title">${post.title}</h3>
                            <p class="card-text">${post.content}</p>
                            ${post.attachedImage ? `<img src="${post.attachedImage}" class="img-fluid mb-3" alt="Attached image">` : ''}
                            <p class="text-muted">Đăng bởi: ${post.userFullName} vào ${new Date(post.postedDate).toLocaleString('vi-VN')}</p>
                            ${isOwner ? `
                                <button class="btn btn-warning btn-sm edit-post">Sửa</button>
                                <button class="btn btn-danger btn-sm delete-post" data-bs-toggle="modal" data-bs-target="#deletePostModal">Xóa</button>
                            ` : ''}
                            <div class="comments mt-3">
                                <h5>Bình luận</h5>
                                ${post.comments.map(comment => `
                                    <div class="comment mb-2">
                                        <p><strong>${comment.userFullName}</strong> (${new Date(comment.commentDate).toLocaleString('vi-VN')}): ${comment.content}</p>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                    </div>
                `;
                $('#posts-container').append(postHtml);
            }

            // Handle edit post
            $(document).on('click', '.edit-post', function () {
                const postId = $(this).closest('.post').data('post-id');
                $.ajax({
                    url: `${apiBaseUrl}/api/UserPosts/${postId}`,
                    type: 'GET',
                    success: function (post) {
                        $('#title').val(post.title);
                        $('#content').val(post.content);
                        editingPostId = postId;
                        $('#new-post-form button').text('Cập nhật bài');
                        $('html, body').animate({ scrollTop: $('#new-post-form').offset().top }, 500);
                    },
                    error: function () {
                        showNotification('Không thể tải bài viết để sửa.', 'error');
                    }
                });
            });

            // Handle delete post button click (open modal)
            $(document).on('click', '.delete-post', function () {
                postIdToDelete = $(this).closest('.post').data('post-id');
            });

            // Handle confirm delete in modal
            $('#confirmDeletePost').on('click', function () {
                if (postIdToDelete) {
                    $.ajax({
                        url: `${apiBaseUrl}/api/UserPosts/${postIdToDelete}`,
                        type: 'DELETE',
                        headers: {
                            'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')
                        },
                        success: function () {
                            $('#deletePostModal').modal('hide');
                            showNotification('Bài viết đã được xóa.', 'success');
                            loadPosts();
                        },
                        error: function (xhr) {
                            $('#deletePostModal').modal('hide');
                            const message = xhr.responseJSON?.message || 'Đã có lỗi xảy ra khi xóa bài viết.';
                            showNotification(message, 'error');
                        }
                    });
                }
            });

            // Show notification
            function showNotification(message, type) {
                const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                $('#notification-area').html(`
                    <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `);
                setTimeout(() => $('.alert').alert('close'), 3000);
            }
        });
    </script>
}
